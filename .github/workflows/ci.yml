name: Integration
on:
  pull_request:
  push:
    branches: [ master ]
jobs:
  build_and_upload_artifact_for_linux_with_tls:
    name: Build and Upload Artifact for linux with tls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for linux
        run: |
          sudo apt-get install -y ninja-build
      - name: Download mbedtls Linux Release
        run: |
          wget https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-linux.tar.gz
          wget https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-headers.tar.gz
      - name: Extract mbedtls
        run: |
          mkdir -p /tmp/mbedtls
          tar -xvf mbedtls-headers.tar.gz -C /tmp/mbedtls
          tar -xvf mbedtls-linux.tar.gz -C /tmp/mbedtls
      - name: Build nng with tls
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=ON \
          -DNNG_ENABLE_TLS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DNNG_ELIDE_DEPRECATED=ON \
          -DNNG_TOOLS=OFF \
          -DMBEDTLS_ROOT_DIR=/tmp/mbedtls \
          ..
          cmake --build . --config Release
      - name: Test nng with tls
        run: ctest --output-on-failure -C "Release"
        working-directory: build
      - name: Create Artifact For nng with tls
        run: |
          mkdir -p nng-linux
          cp build/libnng.so* nng-linux
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-linux-with-tls
          path: |
            nng-linux/
            include/
  build_and_upload_artifact_for_linux:
    name: Build and Upload Artifact for linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for linux
        run: |
          sudo apt-get install -y ninja-build
      - name: Build nng
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" \
          -DBUILD_SHARED_LIBS=ON \
          -DNNG_ELIDE_DEPRECATED=ON \
          -DNNG_TOOLS=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          ..
          cmake --build . --config Release
      - name: Test nng
        run: ctest --output-on-failure -C "Release"
        working-directory: build
      - name: Create Artifact For nng
        run: |
          mkdir -p nng-linux
          cp build/libnng.so* nng-linux
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-linux
          path: |
            nng-linux/
            include/
  build_and_upload_artifact_for_macos_with_tls:
    name: Build and Upload Artifact for macos with tls
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for macos
        run: |
          brew install ninja
      - name: Download mbedtls Macos Release
        run: |
          wget https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-macos.tar.gz
          wget https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-headers.tar.gz
      - name: Extract mbedtls
        run: |
          mkdir -p /tmp/mbedtls
          tar -xvf mbedtls-headers.tar.gz -C /tmp/mbedtls
          tar -xvf mbedtls-macos.tar.gz -C /tmp/mbedtls
      - name: Build nng with tls
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DNNG_ELIDE_DEPRECATED=ON \
          -DNNG_TOOLS=OFF \
          -DNNG_ENABLE_TLS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DMBEDTLS_ROOT_DIR=/tmp/mbedtls \
          ..
          cmake --build . --config Release
      - name: Test nng with tls
        run: ctest --output-on-failure -C "Release"
        working-directory: build
      - name: Create Artifact For nng with tls
        run: |
          mkdir -p nng-macos
          ls build/
          cp build/*.dylib nng-macos
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-macos-with-tls
          path: |
            nng-macos/
            include/
  build_and_upload_artifact_for_macos:
    name: Build and Upload Artifact for macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for macos
        run: |
          brew install ninja
      - name: Build nng
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=ON  \
          -DNNG_ELIDE_DEPRECATED=ON \
          -DNNG_TOOLS=OFF \
          ..
          cmake --build . --config Release
      - name: Test nng
        run: ctest --output-on-failure -C "Release"
        working-directory: build
      - name: Create Artifact For nng
        run: |
          mkdir -p nng-macos
          ls build/
          cp build/*.dylib nng-macos
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-macos
          path: |
            nng-macos/
            include/
  build_and_upload_artifact_for_windows_with_tls:
    name: Build and Upload Artifact for windows with tls
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Download mbedtls Windows Release
        run: |
          Invoke-WebRequest https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-win.tar.gz -OutFile mbedtls-win.tar.gz
          Invoke-WebRequest https://github.com/ilkerhalil/mbedtls/releases/download/v3.2.0/mbedtls-headers.tar.gz -OutFile mbedtls-headers.tar.gz
      - name: Extract mbedtls
        run: |
          mkdir -p mbedtls
          tar -xvf mbedtls-headers.tar.gz -C ${{ github.workspace }}/mbedtls
          tar -xvf mbedtls-win.tar.gz -C ${{ github.workspace }}/mbedtls
          ls ${{ github.workspace }}/mbedtls
      - name: Build nng with tls
        run: |
          mkdir build
          cd build
          cmake -DNNG_ELIDE_DEPRECATED=ON -DNNG_TOOLS=OFF -DBUILD_SHARED_LIBS=ON -DNNG_ENABLE_TLS=ON -DCMAKE_BUILD_TYPE=Release -DMBEDTLS_ROOT_DIR=${{ github.workspace }}\mbedtls  ..
          cmake --build . --config Release
      # - name: Test nng with tls
      #   run: |
      #     ctest -C Release --output-on-failure
      #  working-directory: build
      - name: Create Artifact For nng
        run: |
          mkdir -p nng-win64
          cp build/Release/nng.lib nng-win64
          cp build/Release/nng.dll nng-win64
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-win-with-tls
          path: |
            nng-win64
            include/
  build_and_upload_artifact_for_windows:
    name: Build and Upload Artifact for windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Build nng
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DNNG_ELIDE_DEPRECATED=ON -DNNG_TOOLS=OFF  ..
          cmake --build . --config Release
      # - name: Test nng
      #   run: |
      #     ctest -C Release --output-on-failure
      #  working-directory: build
      - name: Create Artifact For nng
        run: |
          mkdir -p nng-win64
          cp build/Release/nng.lib nng-win64
          cp build/Release/nng.dll nng-win64
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-win
          path: |
            nng-win64
            include/